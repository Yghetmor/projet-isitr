{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { PortalComponent } from './portal/portal.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from \"@angular/router\";\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeAdminComponent } from './home-admin/home-admin.component';\nimport { httpInterceptorProviders } from \"./helpers/HttpRequestInterceptor\";\nimport { HomeEmployerComponent } from './home-employer/home-employer.component';\nimport { AdminBoardComponent } from './board/admin-board/admin-board.component';\nimport { EmployerBoardComponent } from './board/employer-board/employer-board.component';\nimport { DefaultBoardComponent } from './board/default-board/default-board.component';\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { RoleGuard } from \"./guards/role.guard\";\nimport { NoRoleGuard } from \"./guards/no-role.guard\";\nimport { CommandListComponent } from './command-list/command-list.component';\nimport { CommandComponent } from './command/command.component';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { CommandDetailsComponent } from './command-details/command-details.component';\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\nconst routes = [{\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [NoRoleGuard]\n}, {\n  path: 'home/portal',\n  component: PortalComponent,\n  canActivate: [NoRoleGuard]\n}, {\n  path: 'home/portal/signup',\n  component: SignupComponent,\n  canActivate: [NoRoleGuard]\n}, {\n  path: 'home/portal/signin',\n  component: SigninComponent,\n  canActivate: [NoRoleGuard]\n}, {\n  path: 'employer/home',\n  component: HomeEmployerComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    requiredRoles: ['ROLE_USER_EMPLOYER']\n  }\n}, {\n  path: 'employer/commands',\n  component: CommandListComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    requiredRoles: ['ROLE_USER_EMPLOYER']\n  }\n}, {\n  path: 'employer/commands/:cId',\n  component: CommandDetailsComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    requiredRoles: ['ROLE_USER_EMPLOYER']\n  }\n}, {\n  path: 'admin/home',\n  component: HomeAdminComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    requiredRoles: ['ROLE_ADMIN']\n  }\n}, {\n  path: 'commande',\n  component: CommandListComponent\n}, {\n  path: '',\n  redirectTo: 'home',\n  pathMatch: 'full'\n}];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, PortalComponent, HomeComponent, SignupComponent, SigninComponent, HomeAdminComponent, HomeEmployerComponent, AdminBoardComponent, EmployerBoardComponent, DefaultBoardComponent, CommandListComponent, CommandComponent, CommandDetailsComponent],\n  imports: [BrowserModule, ReactiveFormsModule, HttpClientModule, AppRoutingModule, JwtModule.forRoot({\n    config: {\n      tokenGetter: tokenGetter\n      // Add other JwtModule options as needed\n    }\n  }), RouterModule.forRoot(routes)],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAAQC,mBAAmB,QAAO,gBAAgB;AAElD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAAQC,gBAAgB,QAAO,sBAAsB;AACrD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAAQC,YAAY,QAAe,iBAAiB;AACpD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAAQC,wBAAwB,QAAO,kCAAkC;AACzE,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,mBAAmB,QAAQ,2CAA2C;AAC/E,SAASC,sBAAsB,QAAQ,iDAAiD;AACxF,SAASC,qBAAqB,QAAQ,+CAA+C;AACrF,SAAQC,SAAS,QAAO,qBAAqB;AAC7C,SAAQC,SAAS,QAAO,qBAAqB;AAC7C,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,SAASC,uBAAuB,QAAQ,6CAA6C;AAErF,OAAM,SAAUC,WAAW;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAC7C;AAGA,MAAMC,MAAM,GAAW,CACrB;EAACC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAErB,aAAa;EAAEsB,WAAW,EAAE,CAACX,WAAW;AAAC,CAAC,EACpE;EAACS,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAExB,eAAe;EAAEyB,WAAW,EAAE,CAACX,WAAW;AAAC,CAAC,EAC7E;EAACS,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEpB,eAAe;EAAEqB,WAAW,EAAE,CAACX,WAAW;AAAC,CAAC,EACpF;EAACS,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEnB,eAAe;EAAEoB,WAAW,EAAE,CAACX,WAAW;AAAC,CAAC,EACpF;EAACS,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEhB,qBAAqB;EAACiB,WAAW,EAAE,CAACb,SAAS,EAAEC,SAAS,CAAC;EAAEa,IAAI,EAAE;IAAEC,aAAa,EAAE,CAAC,oBAAoB;EAAC;AAAE,CAAC,EAC9I;EAACJ,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAET,oBAAoB;EAACU,WAAW,EAAE,CAACb,SAAS,EAAEC,SAAS,CAAC;EAAEa,IAAI,EAAE;IAAEC,aAAa,EAAE,CAAC,oBAAoB;EAAC;AAAE,CAAC,EACjJ;EAACJ,IAAI,EAAE,wBAAwB;EAAEC,SAAS,EAAEN,uBAAuB;EAACO,WAAW,EAAE,CAACb,SAAS,EAAEC,SAAS,CAAC;EAAEa,IAAI,EAAE;IAAEC,aAAa,EAAE,CAAC,oBAAoB;EAAC;AAAE,CAAC,EACzJ;EAACJ,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAElB,kBAAkB;EAACmB,WAAW,EAAE,CAACb,SAAS,EAAEC,SAAS,CAAC;EAAEa,IAAI,EAAE;IAAEC,aAAa,EAAE,CAAC,YAAY;EAAC;AAAE,CAAC,EAEhI;EAACJ,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAET;AAAoB,CAAC,EACnD;EAACQ,IAAI,EAAE,EAAE;EAAEK,UAAU,EAAE,MAAM;EAAEC,SAAS,EAAE;AAAM,CAAC,CAClD;AAmCM,IAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eAlCrBnC,QAAQ,CAAC;EACRoC,YAAY,EAAE,CACZjC,YAAY,EACZE,eAAe,EACfG,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,kBAAkB,EAClBE,qBAAqB,EACrBC,mBAAmB,EACnBC,sBAAsB,EACtBC,qBAAqB,EACrBI,oBAAoB,EACpBC,gBAAgB,EAChBE,uBAAuB,CAExB;EACDc,OAAO,EAAE,CACPpC,aAAa,EACbC,mBAAmB,EACnBE,gBAAgB,EAChBE,gBAAgB,EAChBgB,SAAS,CAACgB,OAAO,CAAC;IAChBC,MAAM,EAAE;MACNf,WAAW,EAAEA;MACb;;GAEH,CAAC,EACFjB,YAAY,CAAC+B,OAAO,CAACX,MAAM,CAAC,CAE7B;EACDa,SAAS,EAAE,CAAC5B,wBAAwB,CAAC;EACrC6B,SAAS,EAAE,CAACtC,YAAY;CACzB,CAAC,GACWgC,SAAS,CAAI;SAAbA,SAAS","names":["NgModule","BrowserModule","ReactiveFormsModule","AppComponent","HttpClientModule","PortalComponent","AppRoutingModule","RouterModule","HomeComponent","SignupComponent","SigninComponent","HomeAdminComponent","httpInterceptorProviders","HomeEmployerComponent","AdminBoardComponent","EmployerBoardComponent","DefaultBoardComponent","AuthGuard","RoleGuard","NoRoleGuard","CommandListComponent","CommandComponent","JwtModule","CommandDetailsComponent","tokenGetter","localStorage","getItem","routes","path","component","canActivate","data","requiredRoles","redirectTo","pathMatch","AppModule","declarations","imports","forRoot","config","providers","bootstrap"],"sourceRoot":"","sources":["C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\n\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { PortalComponent } from './portal/portal.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeAdminComponent } from './home-admin/home-admin.component';\nimport {httpInterceptorProviders} from \"./helpers/HttpRequestInterceptor\";\nimport { HomeEmployerComponent } from './home-employer/home-employer.component';\nimport { AdminBoardComponent } from './board/admin-board/admin-board.component';\nimport { EmployerBoardComponent } from './board/employer-board/employer-board.component';\nimport { DefaultBoardComponent } from './board/default-board/default-board.component';\nimport {AuthGuard} from \"./guards/auth.guard\";\nimport {RoleGuard} from \"./guards/role.guard\";\nimport {NoRoleGuard} from \"./guards/no-role.guard\";\nimport { CommandListComponent } from './command-list/command-list.component';\nimport { CommandComponent } from './command/command.component';\n\nimport {JwtModule} from \"@auth0/angular-jwt\";\nimport { CommandDetailsComponent } from './command-details/command-details.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent, canActivate: [NoRoleGuard]},\n  {path: 'home/portal', component: PortalComponent, canActivate: [NoRoleGuard]},\n  {path: 'home/portal/signup', component: SignupComponent, canActivate: [NoRoleGuard]},\n  {path: 'home/portal/signin', component: SigninComponent, canActivate: [NoRoleGuard]},\n  {path: 'employer/home', component: HomeEmployerComponent,canActivate: [AuthGuard, RoleGuard], data: { requiredRoles: ['ROLE_USER_EMPLOYER'] }},\n  {path: 'employer/commands', component: CommandListComponent,canActivate: [AuthGuard, RoleGuard], data: { requiredRoles: ['ROLE_USER_EMPLOYER'] }},\n  {path: 'employer/commands/:cId', component: CommandDetailsComponent,canActivate: [AuthGuard, RoleGuard], data: { requiredRoles: ['ROLE_USER_EMPLOYER'] }},\n  {path: 'admin/home', component: HomeAdminComponent,canActivate: [AuthGuard, RoleGuard], data: { requiredRoles: ['ROLE_ADMIN'] }},\n\n  {path: 'commande', component: CommandListComponent},\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortalComponent,\n    HomeComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeAdminComponent,\n    HomeEmployerComponent,\n    AdminBoardComponent,\n    EmployerBoardComponent,\n    DefaultBoardComponent,\n    CommandListComponent,\n    CommandComponent,\n    CommandDetailsComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        // Add other JwtModule options as needed\n      },\n    }),\n    RouterModule.forRoot(routes),\n\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}