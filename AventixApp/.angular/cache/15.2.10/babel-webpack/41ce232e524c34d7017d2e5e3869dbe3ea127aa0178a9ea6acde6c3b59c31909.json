{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nexport class HttpRequestInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const token = this.authService.getToken();\n    req = req.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function HttpRequestInterceptor_Factory(t) {\n    return new (t || HttpRequestInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpRequestInterceptor,\n    factory: HttpRequestInterceptor.ɵfac\n  });\n}\nexport const httpInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: HttpRequestInterceptor,\n  multi: true\n}];","map":{"version":3,"mappings":"AACA,SAA+DA,iBAAiB,QAAQ,sBAAsB;;;AAK9G,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAgB;EAC/CC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IACzCH,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;MACdC,eAAe,EAAE;KAClB,CAAC;IAEF,OAAOJ,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC;EACzB;EAAC;qBAVUJ,sBAAsB;EAAA;EAAA;WAAtBA,sBAAsB;IAAAW,SAAtBX,sBAAsB;EAAA;;AAanC,OAAO,MAAMY,wBAAwB,GAAG,CACtC;EAAEC,OAAO,EAAEd,iBAAiB;EAAEe,QAAQ,EAAEd,sBAAsB;EAAEe,KAAK,EAAE;AAAI,CAAE,CAC9E","names":["HTTP_INTERCEPTORS","HttpRequestInterceptor","constructor","authService","intercept","req","next","token","getToken","clone","withCredentials","handle","factory","httpInterceptorProviders","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\helpers\\HttpRequestInterceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.authService.getToken();\r\n    req = req.clone({\r\n      withCredentials: true,\r\n    });\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\r\n];\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}