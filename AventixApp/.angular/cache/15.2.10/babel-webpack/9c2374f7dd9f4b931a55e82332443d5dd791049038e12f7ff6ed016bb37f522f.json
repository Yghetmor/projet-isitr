{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../command.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../command/command.component\";\nfunction CommandListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Pas de commandes \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CommandListComponent_div_4_app_command_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-command\", 7);\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"routerLink\", c_r3.id);\n    i0.ɵɵproperty(\"command\", c_r3);\n  }\n}\nfunction CommandListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵtemplate(2, CommandListComponent_div_4_app_command_2_Template, 1, 2, \"app-command\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"button\", 5);\n    i0.ɵɵtext(5, \"Ajouter une commande\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\")(7, \"button\", 6);\n    i0.ɵɵtext(8, \"Retour\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.commands);\n  }\n}\nexport class CommandListComponent {\n  constructor(commandeService) {\n    this.commandeService = commandeService;\n  }\n  ngOnInit() {\n    const employerIdString = localStorage.getItem('employer_id');\n    let employerId;\n    if (employerIdString != null) {\n      employerId = parseInt(employerIdString, 10);\n      if (employerId != 0) {\n        this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\n      }\n    }\n    /*    if (!isNaN(employerId)) {\r\n          this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\r\n        } else {\r\n          console.error('Employer ID in localStorage is not a valid number');\r\n        }*/\n  }\n  static #_ = this.ɵfac = function CommandListComponent_Factory(t) {\n    return new (t || CommandListComponent)(i0.ɵɵdirectiveInject(i1.CommandService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommandListComponent,\n    selectors: [[\"app-command-list\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"main\"], [4, \"ngIf\"], [1, \"container\"], [3, \"command\", \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"button\"], [\"type\", \"submit\", \"routerLink\", \"./add\", 1, \"btn\", \"btn-outline-warning\"], [\"type\", \"button\", \"routerLink\", \"../\", 1, \"btn\", \"btn-outline-warning\"], [3, \"command\", \"routerLink\"]],\n    template: function CommandListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Liste des commandes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CommandListComponent_div_3_Template, 3, 0, \"div\", 1);\n        i0.ɵɵtemplate(4, CommandListComponent_div_4_Template, 9, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.commands.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.commands.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.CommandComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAGEA,2BAAiC;IAC/BA,kCACA;IAAAA,qBAAI;IACNA,iBAAM;;;;;IAGJA,iCAA0F;;;;IAApCA,+CAAqB;IAAnCA,8BAAa;;;;;IAFvDA,2BAAiC;IAE/BA,2FAA0F;IACxFA,8BAAoB;IACuDA,oCAAoB;IAAAA,iBAAS;IACtGA,4BAAM;IAAuEA,sBAAM;IAAAA,iBAAS;;;;IAHrEA,eAAW;IAAXA,yCAAW;;;ACA1C,OAAM,MAAOC,oBAAoB;EAM/BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAoB;EAEvDC,QAAQ;IACN,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC5D,IAAIC,UAAmB;IACvB,IAAGH,gBAAgB,IAAI,IAAI,EAAC;MAC1BG,UAAU,GAAGC,QAAQ,CAACJ,gBAAgB,EAAE,EAAE,CAAC;MAC3C,IAAGG,UAAU,IAAI,CAAC,EAAC;QACjB,IAAI,CAACL,eAAe,CAACO,gBAAgB,CAACF,UAAU,CAAC,CAACG,SAAS,CAACC,CAAC,IAAI,IAAI,CAACC,QAAQ,GAAGD,CAAC,CAAC;;;IAI3F;;;;;EAKE;EAAC;qBAvBUX,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAa;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTjClB,8BAAkB;QACbA,mCAAmB;QAAAA,iBAAK;QAE3BA,qEAGM;QACNA,qEAQM;QAERA,iBAAM;;;QAdEA,eAAyB;QAAzBA,8CAAyB;QAIzBA,eAAyB;QAAzBA,8CAAyB","names":["i0","CommandListComponent","constructor","commandeService","ngOnInit","employerIdString","localStorage","getItem","employerId","parseInt","findByEmployerId","subscribe","v","commands","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\command-list\\command-list.component.html","C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\command-list\\command-list.component.ts"],"sourcesContent":["<div class=\"main\">\n <h2>Liste des commandes</h2>\n\n  <div *ngIf=\"commands.length < 1\">\n    Pas de commandes\n    <br>\n  </div>\n  <div *ngIf=\"commands.length > 0\">\n    <div class=\"container\">\n    <app-command *ngFor=\"let c of commands\" [command]=\"c\" routerLink=\"{{c.id}}\"></app-command>\n      <div class=\"button\">\n        <button type=\"submit\" class=\"btn btn-outline-warning\" routerLink=\"./add\">Ajouter une commande</button>\n        <span><button type=\"button\" class=\"btn btn-outline-warning\" routerLink=\"../\">Retour</button></span>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CommandModel} from \"../../model/command\";\nimport {CommandService} from \"../command.service\";\n\n@Component({\n  selector: 'app-command-list',\n  templateUrl: './command-list.component.html',\n  styleUrls: ['./command-list.component.css']\n})\nexport class CommandListComponent implements OnInit{\n\n\n  commands! : CommandModel[];\n\n\n  constructor(private commandeService : CommandService) {}\n\n  ngOnInit(): void {\n    const employerIdString = localStorage.getItem('employer_id');\n    let employerId : number;\n    if(employerIdString != null){\n      employerId = parseInt(employerIdString, 10);\n      if(employerId != 0){\n        this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\n      }\n    }\n\n/*    if (!isNaN(employerId)) {\n      this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\n    } else {\n      console.error('Employer ID in localStorage is not a valid number');\n    }*/\n  }\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}