{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../command.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../command/command.component\";\nfunction CommandListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Pas de commandes \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CommandListComponent_div_4_app_command_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-command\", 7);\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"routerLink\", c_r3.numeroCommande);\n    i0.ɵɵproperty(\"command\", c_r3);\n  }\n}\nfunction CommandListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵtemplate(2, CommandListComponent_div_4_app_command_2_Template, 1, 2, \"app-command\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"button\", 5);\n    i0.ɵɵtext(5, \"Ajouter une commande\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\")(7, \"button\", 6);\n    i0.ɵɵtext(8, \"Retour\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.commands);\n  }\n}\nexport class CommandListComponent {\n  constructor(commandeService) {\n    this.commandeService = commandeService;\n    this.commands = [];\n  }\n  ngOnInit() {\n    this.fetchCommands();\n    this.commandeService.findByEmployerId(1).subscribe({\n      next: data => this.commands = data,\n      error: error => console.error(error)\n    });\n    const employerIdString = localStorage.getItem('employer_id');\n    let employerId;\n    if (employerIdString != null) {\n      employerId = parseInt(employerIdString, 10);\n      if (employerId != 0) {\n        this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\n        console.log(this.commands.length);\n      }\n    }\n  }\n  getEmployerId() {\n    let employerIdString = localStorage.getItem('employer_id') || \"0\";\n    return parseInt(employerIdString, 10);\n  }\n  fetchCommands() {\n    let employerId = this.getEmployerId();\n    if (employerId != 0) {\n      this.commandeService.findByEmployerId(employerId).subscribe({\n        next: commands => this.commands = commands,\n        error: error => console.error('There was an error fetching commands!', error)\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CommandListComponent_Factory(t) {\n    return new (t || CommandListComponent)(i0.ɵɵdirectiveInject(i1.CommandService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommandListComponent,\n    selectors: [[\"app-command-list\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"main\"], [4, \"ngIf\"], [1, \"container\"], [3, \"command\", \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"button\"], [\"type\", \"submit\", \"routerLink\", \"./add\", 1, \"btn\", \"btn-outline-warning\"], [\"type\", \"button\", \"routerLink\", \"../\", 1, \"btn\", \"btn-outline-warning\"], [3, \"command\", \"routerLink\"]],\n    template: function CommandListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Liste des commandes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CommandListComponent_div_3_Template, 2, 0, \"div\", 1);\n        i0.ɵɵtemplate(4, CommandListComponent_div_4_Template, 9, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.commands.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.commands.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.CommandComponent],\n    styles: [\".main[_ngcontent-%COMP%]{\\r\\n  padding-top: 20px;\\r\\n  min-height: calc(100vh - 56px); \\r\\n  background: linear-gradient(rgba(211, 211, 211, 0.2), rgba(123, 104, 238, 0.2));\\r\\n  filter: saturate(60%);\\r\\n}\\r\\n\\r\\nh2[_ngcontent-%COMP%]{\\r\\n  padding: 20px 10px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%]{\\r\\n  position: relative;\\r\\n  display:flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  flex-wrap: wrap;\\r\\n\\r\\n  \\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%]{\\r\\n  text-align: center;\\r\\n  color: rgba(11,31,55,0.58);\\r\\n  padding-top: 50px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tbWFuZC1saXN0L2NvbW1hbmQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLDhCQUE4QixFQUFFLDJCQUEyQjtFQUMzRCwrRUFBK0U7RUFDL0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixlQUFlOztFQUVmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW57XHJcbiAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDU2cHgpOyAvKiBBZGp1c3RlZCB0byBtaW4taGVpZ2h0ICovXHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHJnYmEoMjExLCAyMTEsIDIxMSwgMC4yKSwgcmdiYSgxMjMsIDEwNCwgMjM4LCAwLjIpKTtcclxuICBmaWx0ZXI6IHNhdHVyYXRlKDYwJSk7XHJcbn1cclxuXHJcbmgye1xyXG4gIHBhZGRpbmc6IDIwcHggMTBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuXHJcbiAgLyptYXJnaW46NTBweCAwOyovXHJcbn1cclxuXHJcbmgxe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogcmdiYSgxMSwzMSw1NSwwLjU4KTtcclxuICBwYWRkaW5nLXRvcDogNTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAEEA,2BAAiC;IAC/BA,kCACF;IAAAA,iBAAM;;;;;IAGFA,iCAAsG;;;;IAAhDA,2DAAiC;IAA/CA,8BAAa;;;;;IAFzDA,2BAAiC;IAE7BA,2FAAsG;IACtGA,8BAAoB;IACuDA,oCAAoB;IAAAA,iBAAS;IACtGA,4BAAM;IAAuEA,sBAAM;IAAAA,iBAAS;;;;IAHnEA,eAAW;IAAXA,yCAAW;;;ACE5C,OAAM,MAAOC,oBAAoB;EAM/BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAHnC,aAAQ,GAAoB,EAAE;EAGyB;EAEvDC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;IAEpB,IAAI,CAACF,eAAe,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC;MACjDC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpCE,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK;KACtC,CAAC;IAKF,MAAME,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC5D,IAAIC,UAAmB;IACvB,IAAGH,gBAAgB,IAAI,IAAI,EAAC;MAC1BG,UAAU,GAAGC,QAAQ,CAACJ,gBAAgB,EAAE,EAAE,CAAC;MAC3C,IAAGG,UAAU,IAAI,CAAC,EAAC;QACjB,IAAI,CAACb,eAAe,CAACG,gBAAgB,CAACU,UAAU,CAAC,CAACT,SAAS,CAACW,CAAC,IAAI,IAAI,CAACR,QAAQ,GAAGQ,CAAC,CAAC;QACnFN,OAAO,CAACO,GAAG,CAAC,IAAI,CAACT,QAAQ,CAACU,MAAM,CAAC;;;EAIvC;EAEAC,aAAa;IACX,IAAIR,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,GAAG;IACjE,OAAOE,QAAQ,CAACJ,gBAAgB,EAAE,EAAE,CAAC;EAEvC;EAEAR,aAAa;IACX,IAAIW,UAAU,GAAG,IAAI,CAACK,aAAa,EAAE;IACnC,IAAGL,UAAU,IAAE,CAAC,EAAC;MACf,IAAI,CAACb,eAAe,CAACG,gBAAgB,CAACU,UAAU,CAAC,CAACT,SAAS,CAAC;QAC1DC,IAAI,EAAGE,QAAQ,IAAK,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QAC5CC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK;OAC/E,CAAC;;EAGR;EAAC;qBA9CUV,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTjC1B,8BAAkB;QACZA,mCAAmB;QAAAA,iBAAK;QAC5BA,qEAEM;QACNA,qEAQM;QAERA,iBAAM;;;QAbEA,eAAyB;QAAzBA,8CAAyB;QAGzBA,eAAyB;QAAzBA,8CAAyB","names":["i0","CommandListComponent","constructor","commandeService","ngOnInit","fetchCommands","findByEmployerId","subscribe","next","data","commands","error","console","employerIdString","localStorage","getItem","employerId","parseInt","v","log","length","getEmployerId","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\command-list\\command-list.component.html","C:\\Users\\lea-l\\OneDrive\\Bureau\\PF_INSA\\projet-isitr\\AventixApp\\src\\app\\command-list\\command-list.component.ts"],"sourcesContent":["<div class=\"main\">\n  <h2>Liste des commandes</h2>\n  <div *ngIf=\"commands.length < 1\">\n    Pas de commandes\n  </div>\n  <div *ngIf=\"commands.length > 0\">\n    <div class=\"container\">\n      <app-command *ngFor=\"let c of commands\" [command]=\"c\" routerLink=\"{{c.numeroCommande}}\"></app-command>\n      <div class=\"button\">\n        <button type=\"submit\" class=\"btn btn-outline-warning\" routerLink=\"./add\">Ajouter une commande</button>\n        <span><button type=\"button\" class=\"btn btn-outline-warning\" routerLink=\"../\">Retour</button></span>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CommandModel} from \"../../model/command\";\nimport {CommandService} from \"../command.service\";\n\n@Component({\n  selector: 'app-command-list',\n  templateUrl: './command-list.component.html',\n  styleUrls: ['./command-list.component.css']\n})\nexport class CommandListComponent implements OnInit{\n\n\n  commands : CommandModel[] = [];\n\n\n  constructor(private commandeService : CommandService) {}\n\n  ngOnInit(): void {\n    this.fetchCommands();\n\n    this.commandeService.findByEmployerId(1).subscribe({\n      next: (data) => this.commands = data,\n      error: (error) => console.error(error)\n    });\n\n\n\n\n    const employerIdString = localStorage.getItem('employer_id');\n    let employerId : number;\n    if(employerIdString != null){\n      employerId = parseInt(employerIdString, 10);\n      if(employerId != 0){\n        this.commandeService.findByEmployerId(employerId).subscribe(v => this.commands = v);\n        console.log(this.commands.length);\n      }\n    }\n\n  }\n\n  getEmployerId():number{\n    let employerIdString = localStorage.getItem('employer_id') || \"0\";\n    return parseInt(employerIdString, 10);\n\n  }\n\n  fetchCommands():void{\n    let employerId = this.getEmployerId();\n      if(employerId!=0){\n        this.commandeService.findByEmployerId(employerId).subscribe({\n          next: (commands) => this.commands = commands,\n          error: (error) => console.error('There was an error fetching commands!', error)\n        });\n    }\n\n  }\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}